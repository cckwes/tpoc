service: tpoc

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-1
  runtime: nodejs16.x
  environment:
    TRANSFER_QUEUE: ${self:provder.stage}-transfer-queue
    CHECK_TRANSFER_QUEUE: ${self:provider.stage}-check-transfer-queue
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:GetQueueAttributes
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
            - sqs:SendMessage
            - sqs:GetQueueUrl
          Resource: '*'

plugins:
  - serverless-esbuild

custom:
  esbuild:
    target: es2019
    minify: true
    bundle: true

functions:
  getTransferById:
    handler: src/endpoints.getTransferById
    events:
      - http:
          method: GET
          path: transfers/${transferId}
  createTransfer:
    handler: src/endpoints.createTransfer
    events:
      - http:
          method: POST
          path: transfers
  processTransfer:
    handler: src/transfer.processTransfer
    reservedConcurrency: 1
    events:
      - sqs:
          arn: !GetAtt ProcessTransferQueue.Arn
  checkTransfer:
    handler: src/transfer.checkTransfer
    reservedConcurrency: 1
    events:
      - sqs:
          arn: !GetAtt CheckTransferQueue.Arn

resources:
  Resources:
    ProcessTransferQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.environment.TRANSFER_QUEUE}
        VisibilityTimeout: 900
        MessageRetentionPeriod: 3600
    CheckTransferQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:provider.environment.CHECK_TRANSFER_QUEUE}
        VisibilityTimeout: 900
        MessageRetentionPeriod: 3600
